name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: test
      JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
      COOKIE_NAME: ${{ secrets.COOKIE_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Check environment variables
        run: |
          echo "CI is set: ${{ env.CI != '' }}"
          echo "NODE_ENV is set: ${{ env.NODE_ENV != '' }}"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Cache Playwright
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-
            ${{ runner.os }}-playwright-

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run Playwright tests
        run: npm run build && npx playwright test

      - name: Store Artifacts from Failed Tests
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
